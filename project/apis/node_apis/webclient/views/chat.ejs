<!DOCTYPE html>
<html class=''>
<head>
  <title><%= title %></title>

  <meta charset='UTF-8'>
  <meta name="robots" content="noindex">

  <link rel="mask-icon" type="" href="//production-assets.codepen.io/assets/favicon/logo-pin-f2d2b6d2c61838f7e76325261b7195c27224080bc099486ddd6dccb469b8e8e6.svg" color="#111" />
  <link rel="canonical" href="https://codepen.io/emilcarlsson/pen/ZOQZaV?limit=all&page=74&q=contact+" />
  <link href='https://fonts.googleapis.com/css?family=Source+Sans+Pro:400,600,700,300' rel='stylesheet' type='text/css'>
  <link rel='stylesheet prefetch' href='https://cdnjs.cloudflare.com/ajax/libs/meyer-reset/2.0/reset.min.css'>
  <link rel='stylesheet prefetch' href='https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.6.2/css/font-awesome.min.css'>
  <link rel='stylesheet' href='/stylesheets/chat.css' />
  <script src="//cdnjs.cloudflare.com/ajax/libs/jquery/3.2.1/jquery.min.js"></script>
  <script src="//maxcdn.bootstrapcdn.com/bootstrap/4.0.0/js/bootstrap.min.js"></script>
  <script src="https://cdn.rawgit.com/mattdiamond/Recorderjs/08e7abd9/dist/recorder.js"></script>
</head>

<body>
<div id="frame">
	<div id="sidepanel">
		<div id="profile">
			<div class="wrap">
				<img id="profile-img" src="/images/avatar.png" class="online" alt="" />
				<p>John Doe</p>
				<i class="fa fa-chevron-down expand-button" aria-hidden="true"></i>
				<div id="status-options">
					<ul>
						<li id="status-online" class="active"><span class="status-circle"></span> <p>Online</p></li>
						<li id="status-away"><span class="status-circle"></span> <p>Away</p></li>
						<li id="status-busy"><span class="status-circle"></span> <p>Busy</p></li>
						<li id="status-offline"><span class="status-circle"></span> <p>Offline</p></li>
					</ul>
				</div>
				<div id="expanded">
					<label for="twitter"><i class="fa fa-facebook fa-fw" aria-hidden="true"></i></label>
					<input name="twitter" type="text" value="mikeross" />
					<label for="twitter"><i class="fa fa-twitter fa-fw" aria-hidden="true"></i></label>
					<input name="twitter" type="text" value="ross81" />
					<label for="twitter"><i class="fa fa-instagram fa-fw" aria-hidden="true"></i></label>
					<input name="twitter" type="text" value="mike.ross" />
				</div>
			</div>
		</div>
		<div id="contacts">
			<ul>
				<li class="contact">
					<div class="wrap">
						<img src="/images/faq.png" alt="" />
						<div class="meta">
							<p class="name">Frequently Asked Questions</p>

						</div>
					</div>
				</li>
			</ul>
		</div>
		<div id="bottom-bar">
			<button id="addcontact"><i class="fa fa-copyright fa-fw" aria-hidden="true"></i> <span>2018. All Rights Reserved.</span></button>
		</div>
	</div>
	<div class="content">
		<div class="contact-profile">
			<img src="/images/chatbot.png" alt="" />
			<p>Assistant Chatbot for Android Developers</p>
      </div>
		<div class="messages">
			<ul>
			</ul>
		</div>
		<div class="message-input">
			<div class="wrap">
			<input type="text" placeholder="Write your message..." />
      <i class="fa fa-microphone attachment" aria-hidden="true"></i>
			<button id="sendTextMessage" class="submit"><i class="fa fa-paper-plane" aria-hidden="true"></i></button>
			</div>
		</div>
	</div>
</div>

<script>

  $(".messages").animate({ scrollTop: $(document).height() }, "fast");

  $("#profile-img").click(function() {
  	$("#status-options").toggleClass("active");
  });

  $(".attachment").on("click", function(e) {

    var gumStream; //stream from getUserMedia()
    var rec; //Recorder.js object
    var input; //MediaStreamAudioSourceNode we'll be recording

    // shim for AudioContext when it's not avb.
    var AudioContext = window.AudioContext || window.webkitAudioContext;
    var audioContext = new AudioContext(); //new audio context to help us record

    navigator.mediaDevices.getUserMedia({ audio:true, video:false})
      .then(stream => {

        gumStream = stream;
        input = audioContext.createMediaStreamSource(stream);

        rec = new Recorder(input, {numChannels:1})

        //start the recording process
        rec.record()

        console.log("Recording started");
      }).catch(function(err) {
        console.log("Error in recording audio...");
        console.log(err);
    });

    setTimeout(() => {
      rec.stop();
      gumStream.getAudioTracks()[0].stop();
      rec.exportWAV(uploadAudioFile);
    }, 6000);

  });

  function uploadAudioFile(blob) {

    var formData = new FormData();
    formData.append('file', blob);

      $.ajax({
        url: 'http://localhost:8000/conversation/voice',
        type: 'post',
        contentType: false,
        cache: false,
        data: formData,
        processData: false,
        success: function(data){
          $('<li class="sent"><img src="/images/avatar.png" alt="" /><p>' + data.queryText + '</p></li>').appendTo($('.messages ul'));
          $('<li class="replies"><img src="/images/chatbot.png" alt="" /><p>' + data.fulfillmentText + '</p></li>').appendTo($('.messages ul'));

          $(".messages").animate({ scrollTop: $(document).height() }, "fast");
        },
        error: function( jqXhr, textStatus, errorThrown ){
            console.log( errorThrown );
        }
    });
}

  $('.submit').click(function() {
    newMessage();
  });

  $(".expand-button").click(function() {
    $("#profile").toggleClass("expanded");
  	$("#contacts").toggleClass("expanded");
  });

  $("#status-options ul li").click(function() {
  	$("#profile-img").removeClass();
  	$("#status-online").removeClass("active");
  	$("#status-away").removeClass("active");
  	$("#status-busy").removeClass("active");
  	$("#status-offline").removeClass("active");
  	$(this).addClass("active");

  	if($("#status-online").hasClass("active")) {
  		$("#profile-img").addClass("online");
  	} else if ($("#status-away").hasClass("active")) {
  		$("#profile-img").addClass("away");
  	} else if ($("#status-busy").hasClass("active")) {
  		$("#profile-img").addClass("busy");
  	} else if ($("#status-offline").hasClass("active")) {
  		$("#profile-img").addClass("offline");
  	} else {
  		$("#profile-img").removeClass();
  	};

  	$("#status-options").removeClass("active");
  });

  function newMessage() {
  	message = $(".message-input input").val();

    if($.trim(message) == '') {
  		return false;
  	}

  	$('<li class="sent"><img src="/images/avatar.png" alt="" /><p>' + message + '</p></li>').appendTo($('.messages ul'));
  	$('.message-input input').val(null);
  	$('.contact.active .preview').html('<span>You: </span>' + message);
  	$(".messages").animate({ scrollTop: $(document).height() }, "fast");

    $.post("http://localhost:8000/conversation/ask", {userQuery: message}, function(data){
        if(data.intentName == 'image'){
          $('<li class="replies"><img src="/images/chatbot.png" alt="" /><p><img id="demo" src=/images/glassactionbar.png></p></li>').appendTo($('.messages ul'));
          $(".messages").animate({ scrollTop: $(document).height() }, "fast");
        } else {
          $('<li class="replies"><img src="/images/chatbot.png" alt="" /><p>' + data.answerText + '</p></li>').appendTo($('.messages ul'));
          $(".messages").animate({ scrollTop: $(document).height() }, "fast");
        }
    });

  };

  $(window).on('keydown', function(e) {
    if (e.which == 13) {
      newMessage();
      return false;
    }
  });

//# sourceURL=pen.js
</script>
</body></html>
